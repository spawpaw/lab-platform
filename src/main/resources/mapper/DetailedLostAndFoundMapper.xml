<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spawpaw.lab.dao.DetailedLostAndFoundMapper">
  <resultMap id="BaseResultMap" type="com.spawpaw.lab.entity.DetailedLostAndFound">
    <result column="lost_and_found_id" jdbcType="INTEGER" property="lostAndFoundId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="statues" jdbcType="INTEGER" property="statues" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lost_and_found_id, description, type, contact, user_id, statues, username, nick_name
  </sql>
  <select id="selectByExample" parameterType="com.spawpaw.lab.entity.DetailedLostAndFoundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from DetailedLostAndFound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.spawpaw.lab.entity.DetailedLostAndFoundExample">
    delete from DetailedLostAndFound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.spawpaw.lab.entity.DetailedLostAndFound">
    insert into DetailedLostAndFound (lost_and_found_id, description, type, 
      contact, user_id, statues, 
      username, nick_name)
    values (#{lostAndFoundId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{contact,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{statues,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.spawpaw.lab.entity.DetailedLostAndFound">
    insert into DetailedLostAndFound
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lostAndFoundId != null">
        lost_and_found_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="statues != null">
        statues,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lostAndFoundId != null">
        #{lostAndFoundId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="statues != null">
        #{statues,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.spawpaw.lab.entity.DetailedLostAndFoundExample" resultType="java.lang.Long">
    select count(*) from DetailedLostAndFound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DetailedLostAndFound
    <set>
      <if test="record.lostAndFoundId != null">
        lost_and_found_id = #{record.lostAndFoundId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.statues != null">
        statues = #{record.statues,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DetailedLostAndFound
    set lost_and_found_id = #{record.lostAndFoundId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      statues = #{record.statues,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>